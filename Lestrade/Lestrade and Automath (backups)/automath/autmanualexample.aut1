#example from the aut manual very slightly edited to work here (TYPE does not work)

* Prop := PN ; TYPE
* p := --- ; Prop
p * Proof := PN ; TYPE
* con := PN ; Prop
p * q := --- ; Prop
q * imp := PN ; Prop
p * not := imp(p,con) ; Prop
q * tq := --- ; [tp,Proof(p)]Proof(q)
tq * impintro := PN ; Proof(imp(p,q))
q * tp := --- ; Proof(p)
tp * timp := --- ; Proof(imp(p,q))
timp * impelim := PN ; Proof(q)
p * tnn := --- ; Proof(not(not(p)))
tnn * notnotelim := PN ; Proof(p)
p * tcon := --- ; Proof(con)
tcon * conelim := notnotelim(impintro(not,con,[tnot,Proof(not)]tcon)) ; Proof(p)

quit