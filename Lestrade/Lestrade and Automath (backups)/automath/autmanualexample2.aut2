
@Prop:='prim':'type'

%Wed Mar 21 13:00:41 2018

%1. Prop = PN : type

[p:Prop]

% (p:Prop)

Proof:='prim':'type'

%Wed Mar 21 13:00:41 2018

%2. Proof(p:Prop) = PN : type

@con:='prim':Prop

%Wed Mar 21 13:00:41 2018

%3. con = PN : Prop

p@[q:Prop]

% (p:Prop,q:Prop)

imp:='prim':Prop

%Wed Mar 21 13:00:41 2018

%4. imp(p:Prop,q:Prop) = PN : Prop

p@not:=imp(p,con):Prop

%Wed Mar 21 13:00:41 2018

%5. not(p:Prop) = imp(con) : Prop

q@[tq:[tp:Proof(p)]Proof(q)]

% (p:Prop,q:Prop,tq:[tp:Proof]Proof(q))

impintro:='prim':Proof(imp(p,q))

%Wed Mar 21 13:00:41 2018

%6. impintro(p:Prop,q:Prop,tq:[tp:Proof]Proof(q)) = PN : Proof(imp)

q@[tp:Proof(p)][timp:Proof(imp(p,q))]

% (p:Prop,q:Prop,tp:Proof)

% (p:Prop,q:Prop,tp:Proof,timp:Proof(imp))

impelim:='prim':Proof(q)

%Wed Mar 21 13:00:41 2018

%7. impelim(p:Prop,q:Prop,tp:Proof,timp:Proof(imp)) = PN : Proof(q)

p@[tnn:Proof(not(not(p)))]

% (p:Prop,tnn:Proof(not(not)))

notnotelim:='prim':Proof(p)

%Wed Mar 21 13:00:41 2018

%8. notnotelim(p:Prop,tnn:Proof(not(not))) = PN : Proof

p@[tcon:Proof(con)]

% (p:Prop,tcon:Proof(con))

conelim:=notnotelim(impintro(not,con,[tnot:Proof(not)]tcon)):Proof(p)

%Wed Mar 21 13:00:41 2018

%9. conelim(p:Prop,tcon:Proof(con)) = notnotelim(impintro(not,con,[tnot:Proof(not)]tcon)) : Proof
quit
