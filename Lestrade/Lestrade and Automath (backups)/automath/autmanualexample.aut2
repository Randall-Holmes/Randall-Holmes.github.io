#example from the aut manual very slightly edited to work here (TYPE does not work)

* Prop := PN ; TYPE

%Thu Mar 22 10:38:44 2018

%1. Prop = PN : type

* p := --- ; Prop

% (p:Prop)

p * Proof := PN ; TYPE

%Thu Mar 22 10:38:44 2018

%2. Proof(p:Prop) = PN : type

* con := PN ; Prop

%Thu Mar 22 10:38:44 2018

%3. con = PN : Prop

p * q := --- ; Prop

% (p:Prop,q:Prop)

q * imp := PN ; Prop

%Thu Mar 22 10:38:44 2018

%4. imp(p:Prop,q:Prop) = PN : Prop

p * not := imp(p,con) ; Prop

%Thu Mar 22 10:38:44 2018

%5. not(p:Prop) = imp(con) : Prop

q * tq := --- ; [tp,Proof(p)]Proof(q)

% (p:Prop,q:Prop,tq:[tp:Proof]Proof(q))

tq * impintro := PN ; Proof(imp(p,q))

%Thu Mar 22 10:38:44 2018

%6. impintro(p:Prop,q:Prop,tq:[tp:Proof]Proof(q)) = PN : Proof(imp)

q * tp := --- ; Proof(p)

% (p:Prop,q:Prop,tp:Proof)

tp * timp := --- ; Proof(imp(p,q))

% (p:Prop,q:Prop,tp:Proof,timp:Proof(imp))

timp * impelim := PN ; Proof(q)

%Thu Mar 22 10:38:44 2018

%7. impelim(p:Prop,q:Prop,tp:Proof,timp:Proof(imp)) = PN : Proof(q)

p * tnn := --- ; Proof(not(not(p)))

% (p:Prop,tnn:Proof(not(not)))

tnn * notnotelim := PN ; Proof(p)

%Thu Mar 22 10:38:44 2018

%8. notnotelim(p:Prop,tnn:Proof(not(not))) = PN : Proof

p * tcon := --- ; Proof(con)

% (p:Prop,tcon:Proof(con))

tcon * conelim := notnotelim(impintro(not,con,[tnot,Proof(not)]tcon)) ; Proof(p)

%Thu Mar 22 10:38:44 2018

%9. conelim(p:Prop,tcon:Proof(con)) = notnotelim(impintro(not,con,[tnot:Proof(not)]tcon)) : Proof
quit
